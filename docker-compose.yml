version: '3.9'

services:

  redis:
    image: redis:6.2.6-alpine
    restart: always
    ports:
      - '6379:6379'
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]

  server:
    build:
      context: ./api/
      target: prod
      args:
        - NODE_ENV=development
        - PORT=8000
    ports:
      - "8000:8000"
      - "9229:9229"
      - "9230:9230"
    volumes:
      - ./api/:/usr/app
      - ./api/package.json:/usr/app/package.json
      - ./api/package-lock.json:/usr/app/package-lock.json
    environment:
      - NODE_ENV=development
      - USERNAME=${MONGO_USERNAME}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_HOSTNAME=mongo
      - MONGO_PORT=27017
      - MONGO_DATABASE_NAME=${MONGO_DATABASE_NAME}
    
    restart: 'unless-stopped'
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
      
    healthcheck:
      disable: true

  mongo:
    image: mongo:4.4
    command: mongod --serviceExecutor adaptive
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE_NAME}
    volumes:
      - ./scripts/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh/:ro
    healthcheck:
      test: "[ `echo 'db.runCommand(\"ping\").ok' | mongo localhost/ --quiet` ] && echo 0 || echo 1"

volumes:
  notused: